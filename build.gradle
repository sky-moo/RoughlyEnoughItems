plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
    id 'net.minecrell.licenser' version '0.4.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "RoughlyEnoughItems"
group = "me.shedaniel"

version = project.mod_version

def includeDep = true

minecraft {
}

license {
    header rootProject.file('HEADER')
    include '**/*.java'
}

processResources {
    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
    inputs.property "version", project.version
}

repositories {
    jcenter()
    maven {
        url 'https://maven.terraformersmc.com/releases'
    }
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_version}"
    modApi "net.fabricmc:fabric-loader:${project.fabricloader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${project.fabric_api}"
    modApi("me.shedaniel.cloth:cloth-events:${cloth_events_version}") {
        transitive = false
    }
    modImplementation("me.shedaniel.cloth:config-2:${cloth_config_version}") {
        transitive = false
    }
    modApi("me.shedaniel.cloth:fiber2cloth:1.2.1") {
        transitive = false
    }
    modApi "me.zeroeightsix:fiber:0.6.0-7"
    modApi "blue.endless:jankson:${project.jankson_version}"
    if (includeDep) {
        include("me.shedaniel.cloth:cloth-events:${cloth_events_version}") {
            transitive = false
        }
        include("me.shedaniel.cloth:config-2:${cloth_config_version}") {
            transitive = false
        }
        include("me.shedaniel.cloth:fiber2cloth:1.2.1") {
            transitive = false
        }
        include "me.zeroeightsix:fiber:0.6.0-7"
    }
    modImplementation "io.github.prospector:modmenu:${modmenu_version}"
    compile "org.lwjgl:lwjgl-jemalloc:3.2.1"
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
    implementation 'org.jetbrains:annotations:15.0'
    implementation 'com.github.Towdium:PinIn:1.5.0'
    include 'com.github.Towdium:PinIn:1.5.0'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

task remapMavenJar(type: net.fabricmc.loom.task.RemapJarTask, dependsOn: jar) {
    classifier = "maven"
    afterEvaluate {
        input = file("${project.buildDir}/libs/${archivesBaseName}-${version}-dev.jar")
//        archiveName = "${archivesBaseName}-${version}-maven.jar"
        addNestedDependencies = false
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        if (project.hasProperty('danielshe_pass')) {
            maven {
                url = "http://deploy.modmuss50.me/"
                credentials {
                    username = "danielshe"
                    password = project.getProperty('danielshe_pass')
                }
            }
        }
    }
}